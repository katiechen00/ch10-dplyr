install.packages("devtools")
devtools::install_github("hadley/fueleconomy")
View(vehicles)
library(fueleconomy)
View(vehicles)
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- filter(vehicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- filter(vehicles, make)
make.socket()
# Install devtools package: allows installations from GitHub
install.packages("devtools")
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- vehicles$make
makes
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(makes)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(makes))
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- vehicles[vechicles$year == 1997]
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- vehicles[vehicles$year == 1997]
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- vehicles[vehicles$year == 1997, ]
cars_1997
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars_1997[order(vehicles$hwy)]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars_1997[order(vehicles$hwy), ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars_1997[order(cars_1997$hwy), ]
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
cars_1997$average <- (cars_1997$hwy + cars_1997$cty) / 2
cars_1997
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
new_vehicles <- vehicles[vechicles$drive == '2-Wheel Drive' & vehicles$cty > 20, ]
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
new_vehicles <- vehicles[vehicles$drive == '2-Wheel Drive' & vehicles$cty > 20, ]
new_vehicles
vehicle_model <- function(year_choice, make_choice) {
year_make <- vehicles[vehicles$year == year_choice, vehicles$make == make_choice, ]
year_make[year_make$hwy == max(year_make$hwy), model]
}
# What was the most efficient Honda model of 1995?
vehicle_model(1995, 'Honda')
vehicle_model <- function(year_choice, make_choice) {
year_make <- vehicles[vehicles$year == year_choice & vehicles$make == make_choice, ]
year_make[year_make$hwy == max(year_make$hwy), model]
}
# What was the most efficient Honda model of 1995?
vehicle_model(1995, 'Honda')
vehicle_model <- function(year_choice, make_choice) {
year_make <- vehicles[vehicles$year == year_choice & vehicles$make == make_choice, ]
year_make[year_make$hwy == max(year_make$hwy), 'model']
}
# What was the most efficient Honda model of 1995?
vehicle_model(1995, 'Honda')
library(fueleconomy)
devtools::install_github("hadley/fueleconomy")
# Install and load the "dplyr" library
library(dplyr)
